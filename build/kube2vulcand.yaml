---
apiVersion: v1
kind: Service
metadata:
  name: vulcand-metrics-tcp
  labels:
    name: vulcand-metrics-tcp
spec:
  type: LoadBalancer
  selector:
    name: vulcand-metrics
  ports:
  - name: stastd-tcp
    port: 8126
    targetPort: stastd-tcp
    protocol: TCP
  - name: grafana
    port: 80
    targetPort: grafana
    protocol: TCP
  - name: influxdb-http
    port: 8083
    targetPort: influxdb-http
    protocol: TCP
  - name: influxdb-api
    port: 8086
    targetPort: influxdb-api
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: vulcand-metrics-udp
  labels:
    name: vulcand-metrics-udp
spec:
  type: LoadBalancer
  selector:
    name: vulcand-metrics
  ports:
  - name: statsd-udp
    port: 8125
    targetPort: stastd-udp
    protocol: UDP
---
apiVersion: v1
kind: Service
metadata:
  name: vulcand-lb
  labels:
    name: vulcand-lb
spec:
  type: LoadBalancer
  selector:
    name: vulcand-lb
  ports:
  - name: http
    port: 80
    targetPort: vulcand-http
    protocol: TCP
  - name: api
    port: 8182
    targetPort: vulcand-api
    protocol: TCP
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: vulcand-metrics
  labels:
    name: vulcand-metrics
spec:
  replicas: 1
  selector:
    name: vulcand-metrics
  template:
    metadata:
      labels:
        name: vulcand-metrics
    spec:
      containers:
      - name: statsd
# if you have the influxdb and grafana addons installed, uncomment the env variable below
# and comment out installing influxdb and grafana in this rc
#        env:
#          - name: INFLUXDB_HOST
#            value: 'monitoring-influxdb'
        image: jtblin/statsd-influxdb:6807955
        livenessProbe:
          tcpSocket:
            port: 8126
          initialDelaySeconds: 10
          timeoutSeconds: 5
        ports:
        - containerPort: 8125
          protocol: UDP
          name: stastd-udp
        - containerPort: 8126
          protocol: TCP
          name: stastd-tcp
        readinessProbe:
          tcpSocket:
            port: 8126
          initialDelaySeconds: 1
          timeoutSeconds: 5
      - name: influxdb
        image: tutum/influxdb:0.9
        ports:
        - containerPort: 8083
          protocol: TCP
          name: influxdb-http
        - containerPort: 8086
          protocol: TCP
          name: influxdb-api
        volumeMounts:
        - name: influxdb-storage
          mountPath: /data
      - name: grafana
        env:
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: Admin
        image: grafana/grafana:2.6.0
        ports:
        - containerPort: 3000
          protocol: TCP
          name: grafana
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: influxdb-storage
        emptyDir: {}
      - name: grafana-storage
        emptyDir: {}
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: vulcand-lb
  labels:
    name: vulcand-lb
spec:
  template:
    metadata:
      labels:
        name: vulcand-lb
    spec:
      containers:
      - name: etcd
        image: gcr.io/google_containers/etcd:2.0.9
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        command:
        - /usr/local/bin/etcd
        - -data-dir
        - /var/etcd/data
        - -listen-client-urls
        - http://127.0.0.1:2379,http://127.0.0.1:4001
        - -advertise-client-urls
        - http://127.0.0.1:2379,http://127.0.0.1:4001
        - -initial-cluster-token
        - vulcand-etcd
        volumeMounts:
        - name: etcd-storage
          mountPath: /var/etcd/data
      - name: kube2vulcand
        image: jtblin/kube2vulcand:1984d57
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        args:
        - --v=1
        # - --kube-master-url=http://192.168.64.2:8080 # for use with kube-solo
        # command = "kube2vulcand"
      - name: vulcand
        image: jtblin/vulcand:latest
        imagePullPolicy: Always
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        args:
        # command = "/app/vulcand"
        - -etcd=http://127.0.0.1:4001
        - -statsdAddr=vulcand-metrics-udp:8125
        - -statsdPrefix=vulcand
        ports:
        - containerPort: 8181
          protocol: TCP
          name: vulcand-http
        - containerPort: 8182
          protocol: TCP
          name: vulcand-api
        livenessProbe:
          httpGet:
            path: /v2/status
            port: 8182
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /v2/status
            port: 8182
            scheme: HTTP
          initialDelaySeconds: 1
          timeoutSeconds: 5
      volumes:
      - name: etcd-storage
        emptyDir: {}
